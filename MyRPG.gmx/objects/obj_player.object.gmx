<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_up</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialisation
vx = 0;
vy = 0;
spd = 2;
timer = 0;
state = "IDLE"
face_direction = 8; //8 up; 2 down; 4 left; 6 right

sprite_walk = spr_player_up;
sprite_attack = spr_attack_up;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
animation_speed = 0.2;
switch(state)
{
    case "ATTACK_START":
        image_speed = 0;
        vx = 0;
        vy = 0;
        timer = 15;
        sprite_index = sprite_attack;
        state = "ATTACK";
        break;
    
    case "ATTACK":
        if (timer == 8)
        {
            switch(face_direction)
            {
                case 2:
                    with(instance_create(x, y+12, obj_sword))
                    {
                        image_angle = 180;
                    }
                    break;
                    
                case 4:
                    with(instance_create(x-12, y, obj_sword))
                    {
                        image_angle = 90;
                    }
                    break;
                    
                case 6:
                    with(instance_create(x+12, y, obj_sword))
                    {
                        image_angle = 270;
                    }
                    break;
                    
                case 8:
                    with(instance_create(x, y-12, obj_sword))
                    {
                        image_angle = 0;
                    }
                    break;
                    
            }
        }
        if(timer &gt; 0)
        {
            timer -= 1;
        }
        else
        {
            state = "IDLE";
        }
        break;
    

    case "IDLE":
        image_speed = 0;  
        sprite_index = sprite_walk;  
        vx = 0;
        vy = 0;
        check_input();
        break;
        
    case "RIGHT":
        face_direction = 6;
        image_speed = animation_speed;
        sprite_walk = spr_player_side;
        sprite_attack = spr_attack_side;
        sprite_index = sprite_walk;
        image_xscale = -1;
        vx = 1*spd;
        vy = 0;

        check_input();
        break;
        
    case "UP":
        face_direction = 8;
        image_speed = animation_speed;
        sprite_walk = spr_player_up;
        sprite_attack = spr_attack_up;
        sprite_index = sprite_walk;
        image_xscale = 1;
        vx = 0;
        vy = -1*spd;

        check_input();
        break;
        
    case "LEFT":
        face_direction = 4;
        image_speed = animation_speed;
        sprite_walk = spr_player_side;
        sprite_attack = spr_attack_side;
        sprite_index = sprite_walk;
        image_xscale = 1;
        vx = -1*spd;
        vy = 0;

        check_input();
        break;
        
    case "DOWN":
        face_direction = 2;
        image_speed = animation_speed;
        sprite_walk = spr_player_down;
        sprite_attack = spr_attack_down;
        sprite_index = sprite_walk;
        image_xscale = 1;
        vx = 0;
        vy = spd;

        check_input();
        break;
}

if(!check_collision(vx, vy, obj_solid))
{
    x += vx;
    y += vy;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
